alter table "public"."posts"
  drop constraint "posts_author_fkey";

create table "public"."user_profiles"
(
  "id"           bigint generated by default as identity not null,
  "created_at"   timestamp with time zone                not null default now(),
  "updated_at"   timestamp with time zone                not null default now(),
  "display_name" character varying                       not null,
  "user_id"      uuid                                    not null
);


alter table "public"."posts"
  drop column "author";

alter table "public"."posts"
  add column "user_id" uuid not null;

CREATE UNIQUE INDEX user_infos_pkey ON public.user_profiles USING btree (id);

alter table "public"."user_profiles"
  add constraint "user_infos_pkey" PRIMARY KEY using index "user_infos_pkey";

alter table "public"."user_profiles"
  add constraint "user_infos_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users (id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_profiles"
  validate constraint "user_infos_user_id_fkey";

alter table "public"."posts"
  add constraint "posts_author_fkey" FOREIGN KEY (user_id) REFERENCES auth.users (id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."posts"
  validate constraint "posts_author_fkey";

grant delete on table "public"."user_profiles" to "anon";

grant insert on table "public"."user_profiles" to "anon";

grant references on table "public"."user_profiles" to "anon";

grant select on table "public"."user_profiles" to "anon";

grant trigger on table "public"."user_profiles" to "anon";

grant truncate on table "public"."user_profiles" to "anon";

grant update on table "public"."user_profiles" to "anon";

grant delete on table "public"."user_profiles" to "authenticated";

grant insert on table "public"."user_profiles" to "authenticated";

grant references on table "public"."user_profiles" to "authenticated";

grant select on table "public"."user_profiles" to "authenticated";

grant trigger on table "public"."user_profiles" to "authenticated";

grant truncate on table "public"."user_profiles" to "authenticated";

grant update on table "public"."user_profiles" to "authenticated";

grant delete on table "public"."user_profiles" to "service_role";

grant insert on table "public"."user_profiles" to "service_role";

grant references on table "public"."user_profiles" to "service_role";

grant select on table "public"."user_profiles" to "service_role";

grant trigger on table "public"."user_profiles" to "service_role";

grant truncate on table "public"."user_profiles" to "service_role";

grant update on table "public"."user_profiles" to "service_role";


